nextflow_process {

    name "Test Process PARABRICKS_STARFUSION"
    script "../main.nf"
    process "PARABRICKS_STARFUSION"
    config "./nextflow.config"

    tag "modules"
    tag "modules_nfcore"
    tag "parabricks"
    tag "parabricks/starfusion"
    tag "gpu"

    test("STARFUSION_BUILD - test") {

        setup {
            run("STAR_GENOMEGENERATE") {
                script "../../stargenomegenerate/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [ id:'test_fasta' ],
                        [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true) ]
                    ])
                    input[1] = Channel.of([
                        [ id:'test_gtf' ],
                        [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true) ]
                    ])
                    """
                }
            }
            run("STARFUSION_BUILD") {
                script "../../starfusionbuild/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [ id:'test_fasta' ],
                        [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true) ]
                    ])
                    input[1] = Channel.of([
                        [ id:'test_gtf' ],
                        [ file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.gtf', checkIfExists: true) ]
                    ])
                    input[2] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/CTAT_HumanFusionLib.mini.dat.gz')
                    input[3] = "homo_sapiens"
                    input[4] = file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/Pfam-A.hmm.gz')
                    input[5] = [
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/test_starfusion_dfam.hmm'),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/test_starfusion_dfam.hmm.h3f'),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/test_starfusion_dfam.hmm.h3i'),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/test_starfusion_dfam.hmm.h3m'),
                        file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/test_starfusion_dfam.hmm.h3p')
                    ]
                    input[6] = file("https://data.broadinstitute.org/Trinity/CTAT_RESOURCE_LIB/AnnotFilterRule.pm")
                        """
                }
            }
        }

        when {

            process {
                """
                input[0] = STAR_GENOMEGENERATE.out.junction
                input[1] = STARFUSION_BUILD.out.reference
                """
            }
        }

        then {
            assertAll(
                { assert process.success }
            )
        }
    }
}
